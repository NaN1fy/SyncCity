services:
  kafka:
    image: "bitnami/kafka:3.7.0"
    container_name: kafka
    ports:
      - "9093:9093"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_LISTENERS: CONTROLLER://:19092,INTERNAL://:9092,EXTERNAL://:9093
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_CFG_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:19092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: true
      KAFKA_CFG_MESSAGE_MAX_BYTES: 1048588
    healthcheck:
      test:
        ["CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list"]
      interval: 5s
      timeout: 1m
      retries: 10
    profiles: ["prod", "test", "flink"]

  clickhouse:
    image: "clickhouse/clickhouse-server:latest"
    container_name: clickhouse
    ports:
      - "8123:8123"
    volumes:
      - ./ClickHouse/initDB:/docker-entrypoint-initdb.d
      - ./ClickHouse/config/timezone.xml:/etc/clickhouse-server/config.d/timezone.xml
    environment:
      CLICKHOUSE_DB: sc_database
      CLICKHOUSE_USER: sc_admin
      CLICKHOUSE_PASSWORD: sc_password
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
    healthcheck:
      test: ["CMD", "clickhouse-client", "--query", "SELECT 1"]
      interval: 10s
      timeout: 1m
      retries: 10
    profiles: ["dev", "prod", "test", "flink"]
  grafana:
    image: "grafana/grafana-oss:latest"
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - ./Grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./Grafana/public/img/grafana_icon.svg:/usr/share/grafana/public/img/grafana_icon.svg
      - ./Grafana/public/img/grafana_com_auth_icon.svg:/usr/share/grafana/public/img/grafana_com_auth_icon.svg
      - ./Grafana/public/img/fav32.png:/usr/share/grafana/public/img/fav32.png
      - ./Grafana/public/img/fav16.png:/usr/share/grafana/public/img/fav16.png
      - ./Grafana/public/build:/usr/share/grafana/public/build
      - ./Grafana/public/sass/_variables.dark.generated.scss:/usr/share/grafana/public/sass/_variables.dark.generated.scss
      - ./Grafana/public/sass/_variables.light.generated.scss:/usr/share/grafana/public/sass/_variables.light.generated.scss
      - ./Grafana/public/img/apple-touch-icon.png:/usr/share/grafana/public/img/apple-touch-icon.png
      - ./Grafana/public/img/grafana_mask_icon.svg:/usr/share/grafana/public/img/grafana_mask_icon.svg
      - ./Grafana/public/img/grafana_mask_icon_white.svg:/usr/share/grafana/public/img/grafana_mask_icon_white.svg
      - ./Grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./Grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      GF_INSTALL_PLUGINS: grafana-clickhouse-datasource
      GF_SMTP_ENABLED: true
      GF_SMTP_SKIP_VERIFY: true
      GF_SMTP_HOST: smtp.gmail.com:465
      GF_SMTP_USER: ${GF_SMTP_USER}
      GF_SMTP_PASSWORD: ${GF_SMTP_PASSWORD}
      GF_SMTP_FROM_ADDRESS: ${GF_SMTP_USER}
      GF_SMTP_FROM_NAME: ${GF_SMTP_FROM_NAME}
      GF_AUTH_ORG_ROLE: ${GF_AUTH_ORG_ROLE}
      GF_AUTH_ANONYMOUS_ENABLED: ${GF_AUTH_ANONYMOUS_ENABLED}
      GF_AUTH_DISABLE_LOGIN_FORM: ${GF_AUTH_DISABLE_LOGIN_FORM}
      GF_USERS_ALLOW_SIGN_IN: ${GF_USERS_ALLOW_SIGN_IN}
      GF_AUTH_DISABLE_SIGNOUT_MENU: ${GF_AUTH_DISABLE_SIGNOUT_MENU}
    depends_on:
      clickhouse:
        condition: service_healthy
    profiles: ["dev", "prod"]

  pymocksensors:
    build:
      context: ./PyMockSensors
      target: prod
    container_name: pymocksensors
    environment:
      INDENT_JSON: True
      TZ: "Europe/Rome"
      KAFKA_HOST: "kafka"
      KAFKA_PORT: "9092"
    depends_on:
      kafka:
        condition: service_healthy
    profiles: ["prod", "flink"]

  jobmanager:
    image: flink:1.18.1-java17
    container_name: jobmanager
    command: jobmanager
    ports:
      - "9001:8081"
      - "6123:6123"
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      BOOTSTRAP_SERVERS: kafka:9092
      SCHEMA_REGISTRY_URL: http://kafka:8081  
    volumes:
      - ./Flink/conf/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
      - ./Flink/target/flink-jobs-1.0-jar-with-dependencies.jar:/opt/flink/flink-job.jar 
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/" ]
      interval: 5s
      retries: 10
    profiles: ["dev", "prod", "flink"]

  taskmanager:
    image: flink:1.18.1-java17
    container_name: taskmanager
    command: taskmanager
    ports:
      - "6121:6121"
    volumes:
      - ./Flink/conf/flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
    depends_on:
      jobmanager:
        condition: service_healthy
    environment:
      JOB_MANAGER_RPC_ADDRESS: jobmanager
      TASK_MANAGER_NUMBER_OF_TASK_SLOTS: 2
    profiles: ["dev", "prod", "flink"]

  flink-deployer:
    build:
      context: ./Flink/deployer
    container_name: flink-deployer
    depends_on:
      jobmanager:
        condition: service_healthy
    volumes:
      - ./Flink/target/flink-jobs-1.0-jar-with-dependencies.jar:/flink-job.jar
    profiles: ["dev", "prod", "flink"]

  pymocksensors-test:
    build:
      context: ./PyMockSensors
      target: test
    container_name: pymocksensors-tests
    environment:
      TZ: "Europe/Rome"
      KAFKA_HOST: "kafka"
      KAFKA_PORT: "9092"
    depends_on:
      kafka:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
    profiles: ["test"]

